{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.ts","webpack:///./src/app/inputbox/inputbox.component.html","webpack:///./src/app/inputbox/inputbox.component.scss","webpack:///./src/app/inputbox/inputbox.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<nz-layout>\\n    <nz-header><h2>JS Validator</h2></nz-header>\\n    <nz-content><app-inputbox [data]=\\\"content\\\"></app-inputbox></nz-content>\\n    <nz-footer>Built using Angular (6.1.0), jshint (2.9.6) and ng-zorro (1.5.0). by Daniel Cai, Sep 2018</nz-footer>\\n  </nz-layout>\\n\\n\\n\\n\"","module.exports = \"h2 {\\n  color: #ffffff;\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Data } from './data'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  // source = [\n  //   'function goo() {}',\n  //   'foo = 3;'\n  // ];\n\n  content:string\n  \n  // JSHINT(source, options, predef);\n  \n  \n  // onInput(value) {\n  //   this.content = 'Hi'+value;\n  // }\n  constructor() {\n    \n  }\n\n  ngOnInit() {\n  }\n\n  onSelect(data: Data): void {\n    this.content = data.content;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgZorroAntdModule, NZ_I18N, zh_CN,en_US } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\nimport en from '@angular/common/locales/en';\nimport { InputboxComponent } from './inputbox/inputbox.component';\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputboxComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    NgZorroAntdModule\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Data {\r\n    content: string;\r\n    errors: [string];\r\n  }\r\n  ","module.exports = \"<div nz-row>\\n  <div nz-col nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\n    <textarea row=\\\"4\\\"  (keyup)=\\\"onInput()\\\" nz-input [(ngModel)]=\\\"content\\\" placeholder=\\\"Enter some javascript code here...\\\"></textarea>\\n  </div>\\n  <div nz-col nzSm=\\\"12\\\" class=\\\"result\\\" nzXs=\\\"24\\\">\\n    <ng-container *ngIf=\\\"content!='' && content!=undefined; else isEmpty\\\">\\n        <ng-container *ngIf=\\\"valid; else showError\\\">\\n          <h3 class='valid'>Result: Javascript is Valid.</h3>\\n        </ng-container>\\n        <ng-template #showError>\\n          <div *ngIf=\\\"errors!=undefined\\\">\\n            <h3 class='error'>Result: ({{errors.length}} error{{errors.length==1?'':'s'}} found)</h3>\\n            <nz-table #basicTable [nzData]=\\\"errors\\\" [nzShowPagination]=\\\"false\\\">\\n              <thead>\\n                <tr>\\n                  <th>#</th>\\n                  <th>Evidence</th>\\n                  <th>Reason</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let error of errors;let i = index\\\">\\n                  <td>{{i+1}}</td>\\n                  <td>{{error.evidence}}</td>\\n                  <td>{{error.reason}}</td>\\n                </tr>\\n              </tbody>\\n            </nz-table>\\n          </div>\\n        </ng-template>\\n    </ng-container>\\n    \\n    <ng-template #isEmpty>\\n      <h3>Please enter javascript code in the textbox to detect errors and view report.</h3>\\n    </ng-template>\\n  </div>\\n</div>\\n<div nz-row>\\n    <div nz-col nzSpan=\\\"24\\\" class=\\\"buttons\\\">\\n        <button nz-button nzType=\\\"primary\\\" (click)=\\\"tryInput('valid')\\\">Valid JS</button>\\n        <button nz-button nzType=\\\"default\\\" (click)=\\\"tryInput('oneerror')\\\">With 1 error</button>\\n        <button nz-button nzType=\\\"danger\\\" (click)=\\\"tryInput('moreerror')\\\">More than 1 error</button>\\n        <button nz-button nzType=\\\"default\\\" (click)=\\\"tryInput('clear')\\\">Clear</button>\\n    </div>\\n</div>\\n\\n\\n\"","module.exports = \"textarea {\\n  height: 70vh; }\\n\\n.result {\\n  padding: 10px;\\n  background: #fff;\\n  height: 70vh; }\\n\\n.result h3.valid {\\n    color: #01DF01; }\\n\\n.result h3.error {\\n    color: #FE2E2E; }\\n\\nul {\\n  padding-left: 0; }\\n\\nul li {\\n    list-style: none; }\\n\\nul li span {\\n      padding: 5px; }\\n\\n.err {\\n  color: #FE2E2E; }\\n\\n.buttons {\\n  padding: 10px; }\\n\\n.buttons button {\\n    margin-right: 10px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { JSHINT } from 'jshint';\nimport { Data } from '../data'\n\n@Component({\n  selector: 'app-inputbox',\n  templateUrl: './inputbox.component.html',\n  styleUrls: ['./inputbox.component.scss']\n})\nexport class InputboxComponent implements OnInit {\n  @Input() data:Data\n\n  content:string\n  errors:[string]\n  valid:boolean\n\n  options = {\n    undef: true\n  };\n  predef = {\n    foo: false\n  };\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onInput():void{\n    JSHINT(this.content, this.options, this.predef);\n    this.errors = JSHINT.errors?JSHINT.errors:[]\n    if(this.errors.length){\n      this.valid = false\n    } else{\n      if(this.content!=''){\n        this.valid = true\n      }\n    }\n  }\n\n  tryInput(input):void{\n    switch (input) {\n      case 'valid':\n        this.content = 'var a = 1;'\n        break;\n      case 'oneerror':\n        this.content = 'var b = 2'\n        break;\n      case 'moreerror':\n        this.content = 'var c !@#= jiofdsja2'\n        break;\n      case 'clear':\n        this.content = ''\n        break;\n      default:\n        break;\n    }\n    this.onInput()\n  }\n  \n  // checkInput():void{\n  //   JSHINT(this.content, this.options, this.predef);\n  //     this.errors = JSHINT.errors?JSHINT.errors:[]\n  //     if(this.errors.length){\n  //       this.valid = false\n  //     } else{\n  //       if(this.content!=''){\n  //         this.valid = true\n  //       }\n  //     }\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}